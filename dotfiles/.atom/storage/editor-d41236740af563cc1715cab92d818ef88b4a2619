{"mode":"editor","version":1,"windowDimensions":{"x":294,"y":70,"width":1789,"height":1288,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/jchong/git","/Users/jchong/Documents/Other Scripts","/Users/jchong/Desktop/textfiles","/Users/jchong/Desktop/testapplescript"],"buffers":[{"text":"# Description:\n# Return a link to the bld-corpfw-01 outside interface cacti graph\n#\n# Dependencies:\n#\n# Commands:\n#   hubot are we busy, hubot bandwidthme, or hubot bandwidth me \n#\n# Author:\n#   jds\n\nmodule.exports = (robot) ->\n  cacti_graph = [\n                  \"https://bld-cacti-01.f4tech.com/cacti/graph_image.php?action=view&local_graph_id=1283&rra_id=1&ext=.png\"\n                  ]\n\n  robot.respond /are we busy|bandwidthme|bandwidth me/i, (msg) ->\n    msg.send \"You're always too busy for me, but: \" + cacti_graph\n","markerStore":{"nextMarkerId":9,"markersById":{"0":{"range":{"start":{"row":18,"column":0},"end":{"row":18,"column":0}},"properties":{"type":"selection","editorId":174,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/jchong/git/marvin/scripts/bandwidthme.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"1341486ade34a4f2d750990351fcf17ade5b868a","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"#------------------------------------------------------------------------------------------------\n##########################            ACCOUNT CONFIGURATION            ##########################\n##  These identify your alerts to VictorOps.  The values for these fields are assigned to you\n##  by VictorOps and can be found in the Icinga section of the integrations page.\n##\nconst VictorOps_ORGANIZATION_ID     = \"rally--software-it\"\nconst VictorOps_ORGANIZATION_KEY    = \"d543807a-5506-48ff-bb7e-985ec3119579\"\n\n##########################        FAILSAFE EMAIL CONFIGURATION         ##########################\n## The backup alert email address.  If for any reason the plugin is unable to contact\n## the VictorOps URL, an alert email will be sent to this address. You may configure multiple\n## addresses by separating them with spaces and enclosing the whole thing in single quotes:\n##      \"me@mydomain.com you@mydomain.com him@mydomain.com\"\nconst VictorOps_CONTACTEMAIL        = \"helpdesk@rallydev.com\"\n\n## The maximum amount of time (in seconds) that alerts will be allowed to remain in\n## the queue before the alert is sent to the contact address above.\nconst VictorOps_MAX_SEND_DELAY      = \"60\"\n\n##########################            ROUTING CONFIGURATION            ##########################\n# This default user and notification apply configuration will send all host and service alerts\n# to VictorOps via the VictorOps user.  If you wish to use VictorOps routing keys, create a\n# user for each routing key, and create appropriate notification apply rules to those users.\n# See the VictorOps Icinga2 knowledge base for more information.\n\n\n### VictorOps \"routing keys\" are identified in Icinga2 as users and the configurations below are for such users ###\n\nobject User \"Network\" {\n  import \"generic-user\"\n  display_name = \"Network\"\n  groups = [ \"it-infrastructure\" ]\n  email = \"helpdesk@rallydev.com\"\n}\n\nobject User \"Lifesize\" {\n  import \"generic-user\"\n  display_name = \"Lifesize\"\n  groups = [ \"it-infrastructure\" ]\n  email = \"helpdesk@rallydev.com\"\n}\n\n### Below are the custom notification rules for the VictorOps routing keys ###\n# To create the notifications, you need to create the Host and Service notifications for each user\n# and be sure to assign the notifications to a specific host/service group\n\n\n### Network related notifications ###\n\napply Notification \"notify-network-host\" to Host {\n    import \"notify-victorops-host\"\n    users = [\"Network\"]\n    assign where host.vars.os == \"switches\"\n    assign where host.vars.os == \"firewalls\"\n}\n\napply Notification \"notify-network-service\" to Service {\n    import \"notify-victorops-service\"\n    users = [\"Network\"]\n    assign where host.vars.os == \"switches\"\n    assign where host.vars.os == \"firewalls\"\n    ignore where match(\"victorops-forwarder\", service.name)\n}\n\n### Lifesize related notifications ###\n\napply Notification \"notify-lifesize-host\" to Host {\n    import \"notify-victorops-host\"\n    users = [\"Lifesize\"]\n    assign where host.vars.os == \"Lifesize\"\n}\n\napply Notification \"notify-lifesize-service\" to Service {\n    import \"notify-victorops-service\"\n    users = [\"Lifesize\"]\n    assign where host.vars.os == \"Lifesize\"\n    ignore where match(\"victorops-forwarder\", service.name)\n}\n\n# Below is the default VictorOps notification routing scheme\n\napply Notification \"notify-victorops-host\" to Host {\n    import \"notify-victorops-host\"\n    assign where host.vars.os == \"linux\"\n    assign where host.vars.os == \"Windows\"\n    assign where host.vars.os == \"DC\"\n    assign where host.vars.os == \"pdu\"\n    assign where host.vars.os == \"ups\"\n    assign where host.vars.os == \"infrastructure\"\n}\n\napply Notification \"notify-victorops-service\" to Service {\n    import \"notify-victorops-service\"\n    assign where match(\"*\", service.name)\n    ignore where match(\"victorops-forwarder\", service.name)\n    ignore where host.vars.os == \"switches\"\n    ignore where host.vars.os == \"firewalls\"\n}\n\n\n\n##########################            ACK-BACK CONFIGURATION           ##########################\nconst VictorOps_enable_cmd_poll     = true\n#------------------------------------------------------------------------------------------------\n\n# Other required configuration...\n\n## Identifies this Icinga host to VictorOps.\nconst VictorOps_MONITOR_NAME        = \"Rally IT Infrastructure\"\n\n# Probably in these locations:\nconst IcingaCmdPipe                 = \"/var/run/icinga2/cmd/icinga2.cmd\"\nconst IcingaStatusFile              = \"/var/cache/icinga2/status.dat\"\nconst printf_executable             = \"/usr/bin/printf\"\nconst mail_executable               = \"/usr/bin/mail\"\n\n## These should not need modification\nconst VictorOps_PLUGIN_HOME         = \"/opt/victorops/nagios_plugin\"\nconst VictorOps_LOG_DIR             = \"/var/log/victorops\"\nconst VictorOps_QUEUE_DIR           = \"/var/nagios\"\nconst VictorOps_PROTOCOL            = \"https\"\nconst VictorOps_ALERT_HOST          = \"alert.victorops.com\"\nconst VictorOps_ALERT_URL           = \"/nagios\"\nconst VictorOps_COMMAND_URL         = \"/nagiosCmds\"\nconst VictorOps_STATUS_URL          = \"/nagiosStatus\"\nconst VictorOps_PING_URL            = \"/ping\"\n\n\nobject NotificationCommand \"victorops-notification\" {\n    import \"plugin-notification-command\"\n\n    command = VictorOps_PLUGIN_HOME + \"/bin/enqueue_alert >> \" + VictorOps_LOG_DIR + \"/enqueue_alerts.log 2>&1\"\n\n    env = {\n        ICINGA_COMMANDFILE                  = IcingaCmdPipe\n        ICINGA_STATUSDATAFILE               = IcingaStatusFile\n        ICINGA_TIMET                        = \"$icinga.timet$\"\n        ICINGA_NOTIFICATIONTYPE             = \"$notification.type$\"\n        ICINGA_HOSTNAME                     = \"$host.name$\"\n        ICINGA_HOSTALIAS                    = \"$host.display_name$\"\n        ICINGA_HOSTADDRESS                  = \"$address$\"\n        ICINGA_HOSTSTATE                    = \"$host.state$\"\n        ICINGA_LASTHOSTSTATECHANGE          = \"$host.last_state_change$\"\n        ICINGA_LONGDATETIME                 = \"$icinga.long_date_time$\"\n        ICINGA_NOTIFICATIONAUTHOR           = \"$notification.author$\"\n        ICINGA_NOTIFICATIONCOMMENT          = \"$notification.comment$\"\n        ICINGA_HOSTDISPLAYNAME              = \"$host.display_name$\"\n        ICINGA_CONTACTGROUPNAME             = \"$user.name$\"\n\n        ICINGA__CONTACTVO_ORGANIZATION_ID   = VictorOps_ORGANIZATION_ID\n        ICINGA__CONTACTVO_ORGANIZATION_KEY  = VictorOps_ORGANIZATION_KEY\n        ICINGA__CONTACTVO_MONITOR_NAME      = VictorOps_MONITOR_NAME\n        ICINGA__CONTACTVO_CONTACTEMAIL      = VictorOps_CONTACTEMAIL\n        ICINGA__CONTACTVO_MAX_SEND_DELAY    = VictorOps_MAX_SEND_DELAY\n        ICINGA__CONTACTVO_PLUGIN_HOME       = VictorOps_PLUGIN_HOME\n        ICINGA__CONTACTVO_LOG_DIR           = VictorOps_LOG_DIR\n        ICINGA__CONTACTVO_QUEUE_DIR         = VictorOps_QUEUE_DIR\n        ICINGA__CONTACTVO_PROTOCOL          = VictorOps_PROTOCOL\n        ICINGA__CONTACTVO_ALERT_HOST        = VictorOps_ALERT_HOST\n        ICINGA__CONTACTVO_ALERT_URL         = VictorOps_ALERT_URL\n        ICINGA__CONTACTVO_COMMAND_URL       = VictorOps_COMMAND_URL\n        ICINGA__CONTACTVO_STATUS_URL        = VictorOps_STATUS_URL\n        ICINGA__CONTACTVO_PING_URL          = VictorOps_PING_URL\n    }\n}\n\nobject NotificationCommand \"victorops-svc-notification\" {\n    import \"victorops-notification\"\n\n    env += {\n        ICINGA_SERVICEDESC                  = \"$service.name$\"\n        ICINGA_SERVICEDISPLAYNAME           = \"$service.display_name$\"\n        ICINGA_SERVICEOUTPUT                = \"$service.output$\"\n        ICINGA_SERVICESTATE                 = \"$service.state$\"\n        ICINGA_LASTSERVICESTATECHANGE       = \"$service.last_state_change$\"\n    }\n}\n\n### Notification templates for the default VictorOps routing key ###\n\ntemplate Notification \"notify-victorops\" {\n    users   = [ \"Rally IT\" ]\n    types   = [ Problem, Acknowledgement, Recovery ]\n    command = \"victorops-notification\"\n    period  = \"24x7\"\n}\n\ntemplate Notification \"notify-victorops-host\" {\n    import \"notify-victorops\"\n    states  = [ Up, Down ]\n}\n\ntemplate Notification \"notify-victorops-service\" {\n    import \"notify-victorops\"\n    states  = [ Warning, Unknown, Critical, OK ]\n    command = \"victorops-svc-notification\"\n}\n\n### Notification templates for the \"Network\" routing key ###\n\ntemplate Notification \"notify-network\" {\n    users   = [ \"Network\" ]\n    types   = [ Problem, Acknowledgement, Recovery ]\n    command = \"victorops-notification\"\n    period  = \"24x7\"\n}\n\ntemplate Notification \"notify-network-host\" {\n    import \"notify-network\"\n    states  = [ Up, Down ]\n}\n\ntemplate Notification \"notify-network-service\" {\n    import \"notify-network\"\n    states  = [ Warning, Unknown, Critical, OK ]\n    command = \"victorops-svc-notification\"\n}\n\n###Notification templates for the Lifesize routing key ###\n\ntemplate Notification \"notify-lifesize\" {\n    users   = [ \"Lifesize\" ]\n    types   = [ Problem, Acknowledgement, Recovery ]\n    command = \"victorops-notification\"\n    period  = \"24x7\"\n}\n\ntemplate Notification \"notify-lifesize-host\" {\n    import \"notify-lifesize\"\n    states  = [ Up, Down ]\n}\n\ntemplate Notification \"notify-lifesize-service\" {\n    import \"notify-lifesize\"\n    states  = [ Warning, Unknown, Critical, OK ]\n    command = \"victorops-svc-notification\"\n}\n\ntemplate CheckCommand \"check-victorops\" {\n    import \"plugin-check-command\"\n\n    env = {\n        MONITOR_SW                          = \"ICINGA2\"\n        ICINGA_COMMANDFILE                  = IcingaCmdPipe\n        ICINGA_STATUSDATAFILE               = IcingaStatusFile\n        ICINGA_HOSTNAME                     = NodeName\n\n        ICINGA__SERVICEVO_ORGANIZATION_ID   = VictorOps_ORGANIZATION_ID\n        ICINGA__SERVICEVO_ORGANIZATION_KEY  = VictorOps_ORGANIZATION_KEY\n        ICINGA__SERVICEVO_MONITOR_NAME      = VictorOps_MONITOR_NAME\n        ICINGA__SERVICEVO_CONTACTEMAIL      = VictorOps_CONTACTEMAIL\n        ICINGA__SERVICEVO_MAX_SEND_DELAY    = VictorOps_MAX_SEND_DELAY\n        ICINGA__SERVICEVO_PLUGIN_HOME       = VictorOps_PLUGIN_HOME\n        ICINGA__SERVICEVO_LOG_DIR           = VictorOps_LOG_DIR\n        ICINGA__SERVICEVO_QUEUE_DIR         = VictorOps_QUEUE_DIR\n        ICINGA__SERVICEVO_PROTOCOL          = VictorOps_PROTOCOL\n        ICINGA__SERVICEVO_ALERT_HOST        = VictorOps_ALERT_HOST\n        ICINGA__SERVICEVO_ALERT_URL         = VictorOps_ALERT_URL\n        ICINGA__SERVICEVO_COMMAND_URL       = VictorOps_COMMAND_URL\n        ICINGA__SERVICEVO_STATUS_URL        = VictorOps_STATUS_URL\n        ICINGA__SERVICEVO_PING_URL          = VictorOps_PING_URL\n    }\n}\n\nobject CheckCommand \"check-victorops-heartbeat\" {\n    import \"check-victorops\"\n    command = VictorOps_PLUGIN_HOME + \"/bin/do_victorops_heartbeat\"\n}\n\nobject CheckCommand \"check-victorops-forwarder\" {\n    import \"check-victorops\"\n    command = VictorOps_PLUGIN_HOME + \"/bin/check_victorops_forwarder 2>&1\"\n}\n\nobject CheckCommand \"check-victorops-commands\" {\n    import \"check-victorops\"\n    command = VictorOps_PLUGIN_HOME + \"/bin/check_victorops_cmds\"\n}\n\ntemplate Service \"victorops-service\" {\n    host_name = NodeName\n    check_interval = 60s\n    retry_interval = 60s\n}\n\nobject Service \"victorops-heartbeat\" {\n    import \"victorops-service\"\n\n    display_name   = \"VictorOps Heartbeat\"\n    check_command  = \"check-victorops-heartbeat\"\n    check_interval = 300s\n}\n\nobject Service \"victorops-forwarder\" {\n    import \"victorops-service\"\n\n    display_name   = \"VictorOps Alert Forwarder\"\n    check_command  = \"check-victorops-forwarder\"\n}\n\nobject Service \"victorops-cmd-poll\" {\n    import \"victorops-service\"\n\n    display_name   = \"VictorOps Command Poll\"\n    check_command  = \"check-victorops-commands\"\n    enable_active_checks = VictorOps_enable_cmd_poll\n}\n\n#-------------------------------------------------------------------------------------\n# Alert if the alert forwarder service is not running.\n# Because it's not running, we can only alert via email.\n#-------------------------------------------------------------------------------------\nobject NotificationCommand \"victorops-forwarder-fail-notification\" {\n    import \"victorops-notification\"\n    command = printf_executable + \" '%b' '\\\\n$icinga.date$ $icinga.time$\\\\n\\\\n$notification.type$: $host.name$/$service.name$ is $service.state$\\\\n\\\\n' | \" + mail_executable + \" -s '$notification.type$: $host.name$/$service.name$ is $service.state$' \" + VictorOps_CONTACTEMAIL + \" failsafe+\" + VictorOps_ORGANIZATION_ID + \"@victorops.net >> \" + VictorOps_LOG_DIR + \"/forwarder_fail.out 2>&1\"\n}\n\napply Notification \"notify-forwarder-fail\" to Service {\n    import \"notify-victorops\"\n    command = \"victorops-forwarder-fail-notification\"\n    states  = [ Warning, Unknown, Critical, OK ]\n    assign where match(\"victorops-forwarder\", service.name)\n}\n\nobject CheckCommand \"manual-send-status\" {\n    import \"check-victorops\"\n    command = VictorOps_PLUGIN_HOME + \"/bin/send_status -m\"\n}\n\n# object Service \"victorops-status-resync\" {\n#     import \"victorops-service\"\n#\n#     display_name         = \"VictorOps Status Resync -- manual\"\n#     check_command        = \"manual-send-status\"\n#     check_period         = \"never\"\n#     enable_active_checks = false\n#     check_interval       = 7d\n#     retry_interval       = 7d\n#     notes                = \"Resync Icinga status with VictorOps.  *This is to be considered experimental*\"\n# }\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":99,"column":0},"end":{"row":99,"column":0}},"properties":{"type":"selection","editorId":178,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/jchong/git/iticinga2vo/victorops_rally.conf","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"bf4ef6224cebf2920d422aeef395b4a6fc097b4a","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":174,"softTabs":true,"displayBuffer":{"id":175,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/jchong/git/marvin/scripts/bandwidthme.coffee","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":178,"softTabs":true,"displayBuffer":{"id":179,"softWrapped":true,"scrollTop":2016,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/jchong/git/iticinga2vo/victorops_rally.conf","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/jchong/git/iticinga2vo/victorops_rally.conf","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-coffee-script","language-javascript","language-icinga2","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"linter":{"scope":"File"},"fuzzy-finder":{"/Users/jchong/git/marvin/scripts/bandwidthme.coffee":1443738148144,"/Users/jchong/git/iticinga2vo/victorops_rally.conf":1443738149239},"keybinding-resolver":{},"metrics":{"sessionLength":89841866},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/jchong/git":{"isExpanded":true,"entries":{"devopsmarvin":{"isExpanded":false,"entries":{}},"helpdeskinternal-marvinslack":{"isExpanded":false,"entries":{}},"icinga2":{"isExpanded":false,"entries":{}},"iticinga2vo":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}}}},"marvin":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"bin":{"isExpanded":false,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}},"scripts":{"isExpanded":false,"entries":{}}}},"marvinslack":{"isExpanded":false,"entries":{}},"vomarvin":{"isExpanded":false,"entries":{}},"workstation-chef-repo":{"isExpanded":false,"entries":{}},"~":{"isExpanded":false,"entries":{}}}},"/Users/jchong/Documents/Other Scripts":{"isExpanded":false,"entries":{}},"/Users/jchong/Desktop/textfiles":{"isExpanded":true,"entries":{}},"/Users/jchong/Desktop/testapplescript":{"isExpanded":true,"entries":{}}},"selectedPath":"/Users/jchong/git/iticinga2vo/victorops_rally.conf","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":232}}}